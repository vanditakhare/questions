class Solution
{
    public:
    void merge(int arr[], int l, int m, int r)
    {
           int b[r+1];
         int i=l;
         int j=m+1;
         int k=l;
         
         while(i<=m && j<=r){
             if(arr[i]<arr[j]){
                 b[k]=arr[i];
                 i++;
             }
             else{
                 b[k]=arr[j];
                 j++;
             }
             k++;
         }
         if(i>m){
             while(j<=r){
                 b[k]=arr[j];k++;j++;
             }
         }
         else{
              while(i<=m){
                 b[k]=arr[i];k++;i++;
             }
             
         }
         for(i=l;i<=r;i++){
             arr[i]=b[i];
         }
    }
    public:
    void mergeSort(int arr[], int l, int r)
    {
       if(l<r)
       {
           int mid=(l+r)/2;
           mergeSort(arr,l,mid);
           mergeSort(arr,mid+1,r);
           merge(arr,l,mid,r);
       }
    }
};
